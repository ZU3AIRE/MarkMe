// <auto-generated />
using System;
using MarkMe.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarkMe.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250109112509_Add-is-disabled-in-cr-table")]
    partial class Addisdisabledincrtable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarkMe.Database.Entities.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<int>("ClassRepresentativeCourseId")
                        .HasColumnType("int");

                    b.Property<int>("ClassRepresentativeStudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.HasIndex("ClassRepresentativeStudentId", "ClassRepresentativeCourseId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            ClassRepresentativeCourseId = 1,
                            ClassRepresentativeStudentId = 1,
                            Date = new DateTime(2024, 1, 1, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for Introduction to Computing"
                        },
                        new
                        {
                            ActivityId = 2,
                            ClassRepresentativeCourseId = 2,
                            ClassRepresentativeStudentId = 2,
                            Date = new DateTime(2024, 1, 2, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for Programming Fundamentals"
                        },
                        new
                        {
                            ActivityId = 3,
                            ClassRepresentativeCourseId = 3,
                            ClassRepresentativeStudentId = 3,
                            Date = new DateTime(2024, 1, 3, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for Discrete Mathematics"
                        },
                        new
                        {
                            ActivityId = 4,
                            ClassRepresentativeCourseId = 4,
                            ClassRepresentativeStudentId = 4,
                            Date = new DateTime(2024, 1, 4, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for Calculus"
                        },
                        new
                        {
                            ActivityId = 5,
                            ClassRepresentativeCourseId = 5,
                            ClassRepresentativeStudentId = 5,
                            Date = new DateTime(2024, 1, 6, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for English"
                        },
                        new
                        {
                            ActivityId = 6,
                            ClassRepresentativeCourseId = 1,
                            ClassRepresentativeStudentId = 1,
                            Date = new DateTime(2024, 1, 1, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for Introduction to Computing"
                        },
                        new
                        {
                            ActivityId = 7,
                            ClassRepresentativeCourseId = 2,
                            ClassRepresentativeStudentId = 2,
                            Date = new DateTime(2024, 1, 5, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for Programming Fundamentals"
                        },
                        new
                        {
                            ActivityId = 8,
                            ClassRepresentativeCourseId = 3,
                            ClassRepresentativeStudentId = 3,
                            Date = new DateTime(2024, 1, 1, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for Discrete Mathematics"
                        },
                        new
                        {
                            ActivityId = 9,
                            ClassRepresentativeCourseId = 4,
                            ClassRepresentativeStudentId = 4,
                            Date = new DateTime(2024, 1, 6, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for Calculus"
                        },
                        new
                        {
                            ActivityId = 10,
                            ClassRepresentativeCourseId = 5,
                            ClassRepresentativeStudentId = 5,
                            Date = new DateTime(2024, 1, 6, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for English"
                        },
                        new
                        {
                            ActivityId = 11,
                            ClassRepresentativeCourseId = 1,
                            ClassRepresentativeStudentId = 6,
                            Date = new DateTime(2024, 1, 1, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for Introduction to Computing"
                        },
                        new
                        {
                            ActivityId = 12,
                            ClassRepresentativeCourseId = 2,
                            ClassRepresentativeStudentId = 7,
                            Date = new DateTime(2024, 1, 5, 12, 3, 11, 0, DateTimeKind.Unspecified),
                            Description = "Marked Attendance for Programming Fundamentals"
                        });
                });

            modelBuilder.Entity("MarkMe.Database.Entities.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateMarked")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarkedBy")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("MarkMe.Database.Entities.ClassRepresentative", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<int>("NominatedBy")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.ToTable("ClassRepresentatives");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1,
                            IsDeleted = 0,
                            IsDisabled = false,
                            NominatedBy = 1
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 2,
                            IsDeleted = 0,
                            IsDisabled = false,
                            NominatedBy = 1
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 3,
                            IsDeleted = 0,
                            IsDisabled = false,
                            NominatedBy = 1
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 4,
                            IsDeleted = 0,
                            IsDisabled = false,
                            NominatedBy = 1
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 5,
                            IsDeleted = 0,
                            IsDisabled = false,
                            NominatedBy = 1
                        },
                        new
                        {
                            StudentId = 6,
                            CourseId = 1,
                            IsDeleted = 0,
                            IsDisabled = false,
                            NominatedBy = 1
                        },
                        new
                        {
                            StudentId = 7,
                            CourseId = 2,
                            IsDeleted = 0,
                            IsDisabled = false,
                            NominatedBy = 1
                        });
                });

            modelBuilder.Entity("MarkMe.Database.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("CreditHours")
                        .HasColumnType("int");

                    b.Property<int>("CreditHoursPerWeek")
                        .HasColumnType("int");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            AssignedTo = 1,
                            Code = "CS101",
                            CreditHours = 120,
                            CreditHoursPerWeek = 4,
                            IsArchived = false,
                            Semester = 1,
                            Title = "Introduction to Computing",
                            Type = 1
                        },
                        new
                        {
                            CourseId = 2,
                            AssignedTo = 1,
                            Code = "CS102",
                            CreditHours = 120,
                            CreditHoursPerWeek = 4,
                            IsArchived = false,
                            Semester = 1,
                            Title = "Programming Fundamentals",
                            Type = 1
                        },
                        new
                        {
                            CourseId = 3,
                            AssignedTo = 1,
                            Code = "CS103",
                            CreditHours = 120,
                            CreditHoursPerWeek = 4,
                            IsArchived = false,
                            Semester = 1,
                            Title = "Discrete Mathematics",
                            Type = 1
                        },
                        new
                        {
                            CourseId = 4,
                            AssignedTo = 1,
                            Code = "CS104",
                            CreditHours = 120,
                            CreditHoursPerWeek = 4,
                            IsArchived = false,
                            Semester = 1,
                            Title = "Calculus",
                            Type = 1
                        },
                        new
                        {
                            CourseId = 5,
                            AssignedTo = 1,
                            Code = "CS105",
                            CreditHours = 120,
                            CreditHoursPerWeek = 4,
                            IsArchived = false,
                            Semester = 1,
                            Title = "English",
                            Type = 1
                        });
                });

            modelBuilder.Entity("MarkMe.Database.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MarkMe.Database.Entities.Enrolment", b =>
                {
                    b.Property<int>("EnrolmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrolmentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("EnrolmentId");

                    b.ToTable("Enrolments");
                });

            modelBuilder.Entity("MarkMe.Database.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("CollegeRollNo")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Session")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("UniversityRollNo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CollegeRollNo = "537",
                            FirstName = "Zubair",
                            IsDeleted = false,
                            LastName = "Jamil",
                            RegistrationNo = "2021-gsr-439",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070941"
                        },
                        new
                        {
                            StudentId = 2,
                            CollegeRollNo = "539",
                            FirstName = "Umair",
                            IsDeleted = false,
                            LastName = "Jamil",
                            RegistrationNo = "2021-gsr-442",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070943"
                        },
                        new
                        {
                            StudentId = 3,
                            CollegeRollNo = "540",
                            FirstName = "Ali",
                            IsDeleted = false,
                            LastName = "Senior",
                            RegistrationNo = "2021-gsr-443",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070944"
                        },
                        new
                        {
                            StudentId = 4,
                            CollegeRollNo = "541",
                            FirstName = "Ahmed",
                            IsDeleted = false,
                            LastName = "Ali",
                            RegistrationNo = "2021-gsr-444",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070945"
                        },
                        new
                        {
                            StudentId = 5,
                            CollegeRollNo = "542",
                            FirstName = "Asad",
                            IsDeleted = false,
                            LastName = "Mojenzo",
                            RegistrationNo = "2021-gsr-445",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070946"
                        },
                        new
                        {
                            StudentId = 6,
                            CollegeRollNo = "543",
                            FirstName = "Ahsan",
                            IsDeleted = false,
                            LastName = "Dildar",
                            RegistrationNo = "2021-gsr-446",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070947"
                        },
                        new
                        {
                            StudentId = 7,
                            CollegeRollNo = "544",
                            FirstName = "Minal",
                            IsDeleted = false,
                            LastName = "Asgher",
                            RegistrationNo = "2021-gsr-447",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070948"
                        },
                        new
                        {
                            StudentId = 8,
                            CollegeRollNo = "545",
                            FirstName = "Wajeeha",
                            IsDeleted = false,
                            LastName = "Maqsood",
                            RegistrationNo = "2021-gsr-448",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070949"
                        },
                        new
                        {
                            StudentId = 9,
                            CollegeRollNo = "546",
                            FirstName = "Mahnoor",
                            IsDeleted = false,
                            LastName = "Aqdas",
                            RegistrationNo = "2021-gsr-449",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070950"
                        },
                        new
                        {
                            StudentId = 10,
                            CollegeRollNo = "547",
                            FirstName = "Nasir",
                            IsDeleted = false,
                            LastName = "Aslam",
                            RegistrationNo = "2021-gsr-450",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070951"
                        },
                        new
                        {
                            StudentId = 11,
                            CollegeRollNo = "548",
                            FirstName = "Mehrooz",
                            IsDeleted = false,
                            LastName = "Atif",
                            RegistrationNo = "2021-gsr-451",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070952"
                        },
                        new
                        {
                            StudentId = 12,
                            CollegeRollNo = "549",
                            FirstName = "Akther",
                            IsDeleted = false,
                            LastName = "Ali",
                            RegistrationNo = "2021-gsr-452",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070953"
                        },
                        new
                        {
                            StudentId = 13,
                            CollegeRollNo = "550",
                            FirstName = "Adeel",
                            IsDeleted = false,
                            LastName = "Abbas",
                            RegistrationNo = "2021-gsr-453",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070954"
                        },
                        new
                        {
                            StudentId = 14,
                            CollegeRollNo = "551",
                            FirstName = "Rohan",
                            IsDeleted = false,
                            LastName = "Shahmeer",
                            RegistrationNo = "2021-gsr-454",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070955"
                        },
                        new
                        {
                            StudentId = 15,
                            CollegeRollNo = "552",
                            FirstName = "Amber",
                            IsDeleted = false,
                            LastName = "Shamraiz",
                            RegistrationNo = "2021-gsr-455",
                            Section = "G1",
                            Session = "2021-2025",
                            UniversityRollNo = "070956"
                        });
                });

            modelBuilder.Entity("MarkMe.Database.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "xubairjamil@gmail.com",
                            FirstName = "Zubair",
                            IsDeleted = false,
                            LastName = "Jamil",
                            Password = "123456"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "umairjamil@gmail.com",
                            FirstName = "Umair",
                            IsDeleted = false,
                            LastName = "Jamil",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("MarkMe.Database.Entities.Activity", b =>
                {
                    b.HasOne("MarkMe.Database.Entities.ClassRepresentative", null)
                        .WithMany("Activities")
                        .HasForeignKey("ClassRepresentativeStudentId", "ClassRepresentativeCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MarkMe.Database.Entities.ClassRepresentative", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
